{{- if .Values.grafanaDatabase.enabled }}
# Postgresql cluster
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ .Chart.Name }}-postgresql
  namespace: {{ .Release.Namespace }}
spec:
  instances: 2
  storage:
  size: 1Gi
  backup:
    barmanObjectStore:
      data:
        compression: gzip
      wal:
        compression: gzip
      {{- if (eq .Values.grafanaDatabase.provider "capa") }}
      destinationPath: s3://giantswarm-{{ .Values.grafanaDatabase.baseUrl }}-{{ .Chart.Name }}-postgresql/
      s3Credentials:
        inheritFromIAMRole: true
      {{- end }}
      {{- if (eq .Values.grafanaDatabase.provider "capz") }}
      destinationPath: https://${accountName}.blob.core.windows.net/giantswarm-{{ .Values.grafanaDatabase.baseUrl }}-{{ .Chart.Name }}-postgresql
      azureCredentials:
        storageAccount:
          name: giantswarm-{{ .Values.grafanaDatabase.baseUrl }}-{{ .Chart.Name }}-postgresql
          key: accountName
        storageKey:
          name: giantswarm-{{ .Values.grafanaDatabase.baseUrl }}-{{ .Chart.Name }}-postgresql
          key: accountKey
      {{- end }}
    retentionPolicy: "30d"
    {{- if (eq .Values.grafanaDatabase.provider "capa") }}
    serviceAccountTemplate:
      metadata:
        annotations:
          eks.amazonaws.com/role-arn: {{ .Values.grafanaDatabase.irsaPrefix }}:role/giantswarm-{{ .Values.grafanaDatabase.baseUrl }}-{{ .Chart.Name }}-postgresql
    {{- end }}
---
# Database backup storage
apiVersion: objectstorage.giantswarm.io/v1alpha1
kind: Bucket
metadata:
  annotations:
    meta.helm.sh/release-name: {{ .Chart.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
  labels:
    {{- include "labels.selector" . | nindent 4 }}
  name: giantswarm-{{ .Values.grafanaDatabase.baseUrl }}-{{ .Chart.Name }}-postgresql
  namespace: {{ .Release.Namespace }}
spec:
  name: giantswarm-{{ .Values.grafanaDatabase.baseUrl }}-{{ .Chart.Name }}-postgresql
  expirationPolicy:
    days: 100
  accessRole:
    roleName: giantswarm-{{ .Values.grafanaDatabase.baseUrl }}-{{ .Chart.Name }}-postgresql
    serviceAccountName: {{ .Chart.Name }}-postgresql
    serviceAccountNamespace: {{ .Release.Namespace }}
  tags:
  - key: app
    value: {{ .Chart.Name }}
  - key: installation
    value: {{ .Values.grafanaDatabase.baseUrl }}
  - key: name
    value: giantswarm-{{ .Values.grafanaDatabase.baseUrl }}-{{ .Chart.Name }}-postgresql
---
# CNPs to allow grafana to access postgresql
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: {{ .Chart.Name }}-postgresql
  namespace: {{ .Release.Namespace }}
spec:
  endpointSelector:
    matchLabels:
      cnpg.io/cluster: {{ .Chart.Name }}-postgresql
  egress:
    # Allow egress to other CNPG cluster members.
    - toEndpoints:
        - matchLabels:
            cnpg.io/cluster: {{ .Chart.Name }}-postgresql
      toPorts:
        - ports:
            - port: "5432"
    # Allow egress to world an apiserver for object storage
    - toEntities:
      - world
      - kube-apiserver
  ingress:
    - fromEndpoints:
        # Allow ingress from alloy-metrics
        - matchLabels:
            app.kubernetes.io/instance: alloy-metrics
        # Allow ingress from grafana
        - matchLabels:
            app.kubernetes.io/instance: {{ .Chart.Name }}
        # Allow ingress from prometheus-agent
        - matchLabels:
            app.kubernetes.io/instance: prometheus-agent
        # Allow ingress from other CNPG cluster members (including join pods)
        - matchLabels:
            cnpg.io/cluster: {{ .Chart.Name }}-postgresql
      toPorts:
        - ports:
            - port: "5432"
---
# Pod monitor used to monitor the postgresql cluster. We cannot use .spec.enablePodMonitor because we cannot add the observability.giantswarm.io/tenant label
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  labels:
    observability.giantswarm.io/tenant: giantswarm
  name: {{ .Chart.Name }}-postgresql
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      cnpg.io/cluster: {{ .Chart.Name }}-postgresql
  podMetricsEndpoints:
  - port: metrics
{{- end }}
